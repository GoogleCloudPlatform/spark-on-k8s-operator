name: 'Upstream Sync'
# Checks upstream repo (the google one we forked from) for any changes on master. If there are no changes this is a no op. If there are changes, this will create a PR
on:
  schedule:
    - cron:  '0 0 * * *'
    # scheduled at midnight every day

  workflow_dispatch:  # click the button on Github repo!

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        ref: master
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: true

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.1
      with:
        target_sync_branch: master
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: master
        upstream_sync_repo: GoogleCloudPlatform/spark-on-k8s-operator
        upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false
        
    - name: New commits found: Create Pull Request
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: actions/github-script@v6
      with:
        script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'Pull in changes from upstream fork',
              owner,
              repo,
              head: 'master',
              maintainer_can_modify: true,
              base: 'relativity-master',
              body: [
                'This PR is auto-generated by',
                '[actions/github-script](https://github.com/actions/github-script).'.
                'This merges is in the latest changes from [Google's spark operator](https://github.com/GoogleCloudPlatform/spark-on-k8s-operator)
              ].join('\n')
            });
            github.rest.pulls.requestReviewers({
              owner,
              repo,
              pull_number: result.data.number,
              reviewers: [ 'matthewthekramer', 'meggers', 'bexway-relativity', 'jyang-cac' ]
            });
        # could not get team_reviewers working due to error: Validation Failed: "Could not resolve to a node with the global id of..
    
    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."
      
   